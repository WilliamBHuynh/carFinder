{"version":3,"sources":["components/CarCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["capitalizeStr","str","charAt","toUpperCase","slice","CarCard","car","make","model","carImg","img_url","year","price","horsepower","className","Card","Image","src","wrapped","ui","Content","Header","length","Meta","Description","toFixed","queryClient","QueryClient","App","makes","key","text","value","useState","currentMake","setCurrentMake","searchTerm","setSearchTerm","isSearch","setSearch","fetchCars","a","fetch","res","json","CarsGrid","useQuery","data","status","Dimmer","active","inverted","Loader","content","Group","itemsPerRow","centered","map","indexOf","carContainsStr","QueryClientProvider","client","Input","placeholder","onChange","e","target","Button","onClick","Icon","name","Dropdown","fluid","selection","options","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52d4a2b4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\n\ninterface CarProps {\n    car: Car;\n}\n\n// Function to capitalize a string\nconst capitalizeStr = (str: string): string => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconst CarCard: React.FC<CarProps> = ({ car }) => {\n    // Initialize car attributes\n    const make: string = car.make;\n    const model: string = car.model;\n    const carImg: string = car.img_url;\n    const year: number = car.year;\n    const price: number = car.price;\n    const horsepower: number = car.horsepower;\n\n    //Create Card displaying car attributes\n    return (\n        <div className=\"card\">\n            <Card>\n                <Image src={carImg} wrapped ui={false} />\n                <Card.Content>\n                    <Card.Header>{capitalizeStr(make) + \" \" + (model.length <= 3 ? model.toUpperCase() : capitalizeStr(model))}</Card.Header>\n                    <Card.Meta>\n                        {year}\n                    </Card.Meta>\n                    <Card.Description>\n                        Price: ${price.toFixed(2)}\n                    </Card.Description>\n                    <Card.Description>\n                        Horsepower: {horsepower}\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        </div>\n    );\n}\n\nexport default CarCard;","import React, { useState, SyntheticEvent, ChangeEvent } from \"react\";\nimport { useQuery, QueryClient, QueryClientProvider } from \"react-query\";\nimport { Button, Card, Dimmer, Dropdown, Icon, Input, Loader } from \"semantic-ui-react\";\nimport CarCard from \"./components/CarCard\";\nimport \"./index.css\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const makes = [\n    { key: \"acura\", text: \"Acura\", value: \"acura\" },\n    { key: \"alfa-romeo\", text: \"Alfa-romeo\", value: \"alfa-romeo\" },\n    { key: \"aston-martin\", text: \"Aston-martin\", value: \"aston-martin\" },\n    { key: \"audi\", text: \"Audi\", value: \"audi\" },\n    { key: \"bmw\", text: \"Bmw\", value: \"bmw\" },\n    { key: \"bentley\", text: \"Bentley\", value: \"bentley\" },\n    { key: \"cadillac\", text: \"Cadillac\", value: \"cadillac\" },\n    { key: \"chevrolet\", text: \"Chevrolet\", value: \"chevrolet\" },\n    { key: \"chrysler\", text: \"Chrysler\", value: \"chrysler\" },\n    { key: \"dodge\", text: \"Dodge\", value: \"dodge\" },\n    { key: \"fiat\", text: \"Fiat\", value: \"fiat\" },\n    { key: \"ferrari\", text: \"Ferrari\", value: \"ferrari\" },\n    { key: \"ford\", text: \"Ford\", value: \"ford\" },\n    { key: \"gmc\", text: \"Gmc\", value: \"gmc\" },\n    { key: \"honda\", text: \"Honda\", value: \"honda\" },\n    { key: \"hyundai\", text: \"Hyundai\", value: \"hyundai\" },\n    { key: \"infiniti\", text: \"Infiniti\", value: \"infiniti\" },\n    { key: \"jaguar\", text: \"Jaguar\", value: \"jaguar\" },\n    { key: \"jeep\", text: \"Jeep\", value: \"jeep\" },\n    { key: \"kia\", text: \"Kia\", value: \"kia\" },\n    { key: \"lamborghini\", text: \"Lamborghini\", value: \"lamborghini\" },\n    { key: \"land-rover\", text: \"Land-rover\", value: \"land-rover\" },\n    { key: \"lexus\", text: \"Lexus\", value: \"lexus\" },\n  ];\n\n  const [currentMake, setCurrentMake] = useState(makes[0]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isSearch, setSearch] = useState(false);\n\n  const carContainsStr = (car: Car, str: string): boolean => {\n    if ((car.make.indexOf(str) !== -1) || (car.model.indexOf(str) !== -1)) {\n      return true;\n    }\n    return false;\n  }\n\n  const onSearch = () => {\n    setSearch(true);\n  }\n\n  const onSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  }\n\n  const handleMakeChange = (event: SyntheticEvent<HTMLElement>, data: any) => {\n    setSearch(false);\n    setCurrentMake({\n      key: data.value,\n      text: data.value,\n      value: data.value\n    });\n  }\n\n  const fetchCars = async () => {\n    const res = await fetch(\"https://private-2217f-carsapi1.apiary-mock.com/cars\");\n    return res.json();\n  }\n\n\n  const CarsGrid = () => {\n    const { data, status } = useQuery(\"cars\", fetchCars);\n\n    return (\n      <div>\n        {status === \"error\" &&\n          <div>Error loading data..</div>}\n\n        {status === \"loading\" &&\n          <div>\n            <Dimmer active inverted>\n              <Loader inverted content=\"Loading\" />\n            </Dimmer>\n          </div>}\n\n        {status === \"success\" &&\n          <div>\n            <Card.Group itemsPerRow={3} centered>\n              {data.map((car: Car) => (isSearch ? (carContainsStr(car, searchTerm) ? <div><CarCard car={car} /></div> : <div></div>)\n                : (car.make === currentMake.value ? <div><CarCard car={car} /></div> : <div></div>)))}\n            </Card.Group>\n          </div>}\n      </div>\n    )\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div>\n        <div>\n          <header className=\"title\">\n            <span className=\"titleFirstHalf\">Car</span>\n            Finder\n          </header>\n          <p className=\"slogan\">Find your next ride!</p>\n        </div>\n\n        <div className=\"banner\">\n          <p>List of cars</p>\n        </div>\n\n        <div className=\"center\">\n          <div className=\"searchBar\">\n            <div>\n              <Input\n                className=\"searchInput\"\n                placeholder=\"Search car by make and/or model\"\n                value={searchTerm}\n                onChange={onSearchChange}\n              />\n            </div>\n            <div>\n              <Button className=\"searchBtn\" onClick={onSearch}>\n                <Icon name=\"search\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"center\">\n          <div className=\"dropdown\">\n            <Dropdown\n              fluid\n              selection\n              placeholder=\"Filter by make\"\n              value={currentMake.text}\n              options={makes}\n              onChange={handleMakeChange}\n            />\n          </div>\n        </div>\n        <div className=\"grid\">\n          <CarsGrid />\n        </div>\n      </div>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"semantic-ui-css/semantic.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('container')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}